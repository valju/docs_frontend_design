# Back-end gitignore - I created by copying last semester gitignore text and
# adding some comments.
# See https://help.github.com/ignore-files/ for more about ignoring files.

# package-lock.json 
# conflicting knowledge about it ignored or not 2018-11-12 
# https://github.com/npm/npm/issues/20603    (ignore)
# https://github.com/npm/npm/blob/v5.0.0/doc/files/package-lock.json.md  (Don't ignore)

# yarn.lock
# This should not be gitignored!!!
# Read more: https://yarnpkg.com/blog/2016/11/24/lockfiles-for-all/ 

# if we need to ignore a file that insists still going back to repo:
# 1.   add that file to gitignore:         src/SomeFile.js
# 2.   run this on terminal:               git rm --cached src/SomeFile.js
# 3.   remove it also from remote repo.    e.g. manually at Github.com repo and commit there

# Each developer's database settings: NOT tracked
src/db/db_settings.js

# Babel Build directory
dist

# Dia temporary file
*.dia~

# Word temporary file
~$*

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# next.js build output
.next

# Windows 
desktop.ini 
thumbs.db

# Apple macOS "desktop.ini thumbs.db"
.DS_Store
